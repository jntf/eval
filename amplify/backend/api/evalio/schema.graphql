# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY {
#   globalAuthRule: AuthRule = { allow: public }
# } # FOR TESTING ONLY!
# Choix de l'approche de denormalisation afin d'avoir un temps de requete optimal puisque utilisé par des selecteurs
type Vehicle @model {
  make: String! @index(name: "byMake", sortKeyFields: ["model"]) # index sur la marque (partition key) et le model (sort key)
  model: String!
  keywords: [String]
  energies: [String]
  transmissions: [String]
  isActive: Int
}

# History des recherches par utilisateurs
type SearchHistory @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  isMultipleImport: Boolean!
  s3Link: String
  dataSearch: AWSJSON!
  ref: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

# Users et Company Table en complément des données cognito.
type User
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]) {
  id: ID!
  email: String!
  name: String
  family_name: String
  phoneNumber: String
  isActiveUser: Boolean
  isAdminCompany: Boolean
  company: Company @belongsTo(fields: ["companyId"])
  companyId: ID
}

type Company
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]) {
  id: ID!
  companyName: String!
  vatNumber: String
  address: String
  postalCode: String
  city: String
  isActiveCompany: Boolean
  settings: SettingsCompany @hasOne(fields: ["settingsCompanyId"])
  settingsCompanyId: ID
  users: [User] @hasMany(fields: ["id"])
  ownerId: ID
}

type SettingsCompany @model 
  @auth(rules: [{ allow: owner }]) {
  id: ID!
  fixedFees: Float
  freVo: Float
  margin: Float
  marginType: String
  company: Company @belongsTo(fields: ["companyId"])
  companyId: ID
}
# KPIs
