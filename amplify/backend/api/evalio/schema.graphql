# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
# Choix de l'approche de denormalisation afin d'avoir un temps de requete optimal puisque utilisé par des selecteurs
type Vehicle @model {
  make: String! @index(name: "byMake", sortKeyFields: ["model"]) # index sur la marque (partition key) et le model (sort key)
  model: String!
  keywords: [String]
  energies: [String]
  transmissions: [String]
  isActive: Int
}

# History des recherches par utilisateurs
type SearchHistory @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  isMultipleImport: Boolean!
  s3Link: String
  dataSearch: AWSJSON!
  ref: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

# Users et Company Table en complément des données cognito.
type User
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]) {
  id: ID!
  email: String!
  name: String
  family_name: String
  phoneNumber: String
  isActiveUser: Boolean
  isAdminCompany: Boolean
  company: Company @belongsTo
}

type Company
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]) {
  id: ID!
  companyName: String!
  vatNumber: String
  address: String
  postalCode: String
  city: String
  isActiveCompany: Boolean
  users: [User] @hasMany
}

# KPIs

type BrandDistribution @model {
  date: String! @index(name: "byDate", sortKeyFields: ["brand"])
  brand: String!
  count: Int!
}

type ModelDistribution @model {
  date: String! @index(name: "byDate", sortKeyFields: ["model"])
  model: String!
  count: Int!
}

type AvgDaysInStock @model {
  date: String! @index(name: "byDate", sortKeyFields: ["brand"])
  brand: String!
  model: String
  avgDaysInStock: Float!
}

type YearDistribution @model {
  date: String! @index(name: "byDate", sortKeyFields: ["year"])
  year: String!
  count: Int!
}

type ActiveSellers @model {
  date: String! @index(name: "byDate", sortKeyFields: ["seller"])
  seller: String!
  count: Int!
}

type EnergyDistribution @model {
  date: String! @index(name: "byDate", sortKeyFields: ["energy"])
  energy: String!
  count: Int!
}

type AvgPrice @model {
  date: String! @index(name: "byDate", sortKeyFields: ["brand"])
  brand: String!
  model: String
  avgPrice: Float!
}
